/* Checksum.ai autogenerated test */
import { test as base, expect } from "@playwright/test";
import { init, IChecksumPage } from "@checksum-ai/runtime";

const { test, defineChecksumTest, login } = init(base);

test.describe("productListOrNew", () => {
  test.beforeEach(async ({ page }: { page: IChecksumPage }) => {
    await login(page);
    await page.goto("/a/products", { waitUntil: "domcontentloaded" });
  });

  test(
    defineChecksumTest("Edit the general information of a product", "IUZPB"),
    async ({ page }) => {
      await page
        .checksumSelector("0dNYA")
        .checksumAI("Click on the options menu for the first product.")
        .getByRole("row", {
          name: "Flying Wooden Bird - Published 2151 in stock for 3 variant(s)",
        })
        .getByRole("button")
        .click();
      await expect(page.getByText("Edit").first()).toBeVisible();
      await expect(page.getByText("Unpublish").first()).toBeVisible();
      await page
        .checksumSelector("ACjTR")
        .checksumAI("Click on the 'Edit' button in the product options menu.")
        .getByRole("button", { name: "Edit" })
        .click();
      await expect(page.getByText("Unpublish").first()).not.toBeVisible();
      await expect(page.getByText("Duplicate").first()).not.toBeVisible();
      await expect(page.getByText("Import Products").first()).not.toBeVisible();
      await expect(page.getByText("Export Products").first()).not.toBeVisible();
      await expect(page).toHaveURL(/\/a\/products\/prod_.+(\?.*)?(\#.*)?$/);
      await expect(page.getByText("Flying Wooden Bird").first()).toBeVisible();
      await expect(page.getByText("Back to Products").first()).toBeVisible();
      await expect(page.getByText("2").first()).toBeVisible();
      await expect(page.getByText("Size").first()).toBeVisible();
      await expect(page.getByText("Color").first()).toBeVisible();
      await page
        .checksumSelector("QehLa")
        .checksumAI(
          "Click on the 'Edit' button near the product title to edit the general information."
        )
        .getByRole("button", { name: "Edit", exact: true })
        .click();
      await expect(page.getByText("Upload Thumbnail").first()).toBeVisible();
      await expect(page.getByText("Upload").first()).toBeVisible();
      await page
        .checksumSelector("0XuBU")
        .checksumAI(
          "I will now close the thumbnail upload dialog and return to the product details page to find the correct edit section for the general information."
        )
        .locator("body")
        .click();
      await page
        .checksumSelector("SA9nw")
        .checksumAI(
          "I will attempt once more to close the thumbnail upload dialog to access the product details for editing the general information."
        )
        .locator("body")
        .click();
    }
  );
});
